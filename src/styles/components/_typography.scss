h1, h2, h3, h4, h5, h6 {
  margin-top: 0;
  &:last-child {
    margin-bottom: 0;
  }
  & ~ h2,
  & ~ h3,
  & ~ h4,
  & ~ h5,
  & ~ h6 {
    margin-top: 1.375rem;
  }
}

h1:not(:last-child):not([class]) {
  margin-bottom: 60px;
}
h1, .h1 {
  font-size: 2.25rem;
  line-height: 1.3;
  font-weight: 700;
  margin-bottom: 1.25rem;
}
h2, .h2 {
  font-size: 2.25rem;
  line-height: 1.3;
  font-weight: 700;
  margin-bottom: 1.25rem;
}
h3, .h3 {
  font-size: 1.875rem;
  line-height: 1.3;
  font-weight: 700;
  margin-bottom: 1.25rem;
}
h4, .h4 {
  font-size: 1.375rem;
  line-height: 1.4;
  font-weight: 600;
  margin-bottom: 1.25rem;
}
h5, .h5 {
  font-size: 1.375rem;
  line-height: 1.4;
  font-weight: 600;
  margin-bottom: 1.25rem;
}
h6, .h6 {
  font-size: 1rem;
  line-height: 1.4;
  font-weight: 600;
  margin-bottom: 1.25rem;
}

p {
  margin: 0 0 1rem 0;
  &:last-child {
    margin-bottom: 0;
  }
}

mark {
  background-color: transparent;
  color: var(--color-accent);
}

figure {
  margin: 1.25rem 0;
  &:first-child {
    margin-top: 0;
  }
  &:last-child {
    margin-bottom: 0;
  }
}

figcaption {
  display: block;
  margin: 10px 0 0 0;
  color: var(--color-muted);
  font-size: 0.875rem;
  transition: color $trs1;
}

img:not([class]) {
  display: block;
  width: auto;
  max-width: 100%;
}

strong, b {
  font-weight: 700;
}

blockquote {
  padding: 20px 40px;
  background-color: var(--color-muted);
  margin: 1.25rem 0;
  &:last-child {
    margin-bottom: 0;
  }
  &:first-child {
    margin-top: 0;
  }
}

a {
  text-decoration: none;
  color: inherit;
  &:not([class]), &.link {
    transition: opacity $trs1, border-color $trs1;
    border-bottom: 1px solid currentColor;
    &[data-touch], &[data-hover] {
      border-color: transparent;
      opacity: 0.9;
    }
    &[data-focus] {
      opacity: 0.8;
    }
  }
}


.table {
  overflow: auto;
}
table:not([class]) {
  min-width: 100%;
  th {
    font-weight: 700;
    padding: 10px 16px 10px 0;
    &:first-child {
      padding-left: 16px;
    }
    &:last-child {
      text-align: center;
    }
  }
  td {
    padding: 12px 16px 12px 0;
    transition: background-color $trs1;
    &:first-child {
      padding-left: 16px;
    }
    &:last-child {
      text-align: center;
    }
  }
  th,
  td {
    border-bottom: 1px solid var(--color-muted);
    text-align: left;
    width: 25%;
  }
  tr {
    &[data-touch], &[data-hover] {
      td {
        background-color: var(--color-grayish);
      }
    }
  }
}

@include media-breakpoint-down(xxl) {
  h1:not(:last-child):not([class]) {
    margin-bottom: 50px;
  }
  h2, .h2 {
    font-size: 2rem;
  }
  h6, .h6 {
    margin-bottom: 1.125rem;
  }
}
@include media-breakpoint-between(xl, xxl) {
  @media (max-height:680px) {
    h1, .h1 {
      font-size: 2rem;
    }
    h2, .h2 {
      font-size: 1.75rem;
    }
    h3, .h3 {
      font-size: 1.5rem;
    }
    h4, .h4 {
      font-size: 1.25rem;
    }
    h5, .h5 {
      font-size: 1.25rem;
    }
  }
}
@include media-breakpoint-down(xl) {
  h1, .h1 {
    font-size: 2.125rem;
  }
}
@include media-breakpoint-down(lg) {
  h3, .h3 {
    font-size: 1.5rem;
  }
  h5, .h5 {
    font-size: 1.125rem;
  }
  h6, .h6 {
    margin-bottom: 1rem;
  }
}
@include media-breakpoint-down(md) {
  h1, .h1 {
    font-size: 1.875rem;
  }
  h2, .h2 {
    font-size: 1.875rem;
  }
}
@include media-breakpoint-down(sm) {
  h1:not(:last-child):not([class]) {
    margin-bottom: 40px;
  }
  h1, .h1 {
    font-size: 1.375rem;
  }
  h2, .h2 {
    font-size: 1.25rem;
  }
  h3, .h3 {
    font-size: 1.25rem;
  }
  h4, .h4 {
    font-size: 1.25rem;
  }
  h5, .h5 {
    font-size: 1rem;
  }
  h6, .h6 {
    margin-bottom: 0.765rem;
  }
}

ul, ol {
  &:not([class]), &.list {
    &:not(:last-child) {
      margin-bottom: 1rem;
    }
    li {
      &:not(:last-child) {
        margin-bottom: 10px;
      }
    }
  }
}

ul {
  &:not([class]), &.list {
    li {
      padding-left: 15px;
      position: relative;
      &::before {
        content: '';
        position: absolute;
        top: calc(0.65em - 2px);
        left: 0;
        display: block;
        width: 5px;
        height: 5px;
        border-radius: 50px;
        background-color: currentColor;
      }
    }
  }
}

ol {
  &:not([class]), &.list {
    counter-reset: section;
    li {
      &:before {
        counter-increment: section;
        content: counter(section) '. ';
      }
    }
  }
}